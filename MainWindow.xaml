<Window
    x:Class="Dynamic_Lighting_Key_Indicator.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Dynamic_Lighting_Key_Indicator"
    xmlns:converters="using:Dynamic_Lighting_Key_Indicator.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ignore="http://www.galasoft.ch/ignore"
    mc:Ignorable="ignore"
    Title="Dynamic Lighting Key Indicator"
    >


    <Grid x:Name="MainGrid" Padding="40" Background="{ThemeResource WindowBackgroundColor}" Loaded="AutoSizeWindow_OnGridLoad" HorizontalAlignment="Center" VerticalAlignment="Top">
        <Grid.Resources>
            <!-- Style for color selection buttons -->
            <Style x:Key="ColorButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="45"/>
                <Setter Property="Height" Value="45"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="CornerRadius" Value="4"/>
            </Style>
            
            <Style x:Key="SwapButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="CornerRadius" Value="4"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style>

            <Style x:Key="SwapIconGlyphStyle" TargetType="FontIcon">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="Glyph" Value="&#xF1CB;"/>
                <Setter Property="FontSize" Value="14" />
            </Style>

            <converters:DllPathToImageConverter x:Key="DllPathToImageConverter" />

        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />     <!-- Row 0 -->
            <RowDefinition Height="Auto" />     <!-- Row 1 -->
            <RowDefinition Height="Auto" />     <!-- Row 2 -->
            <RowDefinition Height="Auto" />     <!-- Row 3 -->
            <RowDefinition Height="Auto" />     <!-- Row 4 -->
            <RowDefinition Height="Auto" />     <!-- Row 5 -->
            <RowDefinition Height="Auto" />     <!-- Row 6 -->
            <RowDefinition Height="Auto" />     <!-- Row 7 -->
            <RowDefinition Height="Auto" />     <!-- Row 8 -->
            <RowDefinition Height="Auto" />     <!-- Row 9 -->
            <RowDefinition Height="Auto" />     <!-- Row 10 -->
            <RowDefinition Height="Auto" />     <!-- Row 11 -->
        </Grid.RowDefinitions>

        <!-- Shadow host panel: declared first, so it's at a lower Z-index -->
        <Grid x:Name="ShadowHostGrid" />
        
        <!-- Debug mode test button 1 -->
        <Button x:Name="testButton" 
            Content="Test" 
            Visibility="{x:Bind ViewModel.DebugMode_VisibilityBool, Mode=OneWay}" 
            HorizontalAlignment="Right" 
            VerticalAlignment="Top" 
            Click="TestButton_Click"
        />
        <!-- Title -->
        <!-- <TextBlock Grid.Row="0" Text="DYNAMIC LIGHTING KEY INDICATOR" FontFamily="OverpassEmbedded" FontSize="35" HorizontalAlignment="Center" Margin="0,0,0,0"/> -->
        <TextBlock Grid.Row="0" Text="DYNAMIC LIGHTING KEY INDICATOR" 
                   FontFamily="{StaticResource OverpassBold}" 
                   ignore:FontFamily="Overpass"
                   ignore:FontWeight="Bold"
                   FontSize="35" HorizontalAlignment="Center" Margin="0,0,0,10"/>

        <!--
        <TextBlock x:Name="watcherStatusText" 
                   Grid.Row="0"
                   Text="{x:Bind ViewModel.DeviceWatcherStatusMessage, Mode=OneWay}"
                   HorizontalAlignment="Center"
                   Margin="0,0,0,0"
                   />
        -->
        
        <!-- Row With Start/Stop monitoring buttons -->
        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,15,0,0" HorizontalAlignment="Center">

            <Button x:Name="buttonStartWatch" Click="ButtonStartWatch_Click" Margin="0,0,0,0" Background="{ThemeResource ButtonBackground_Green}"
                    IsEnabled="{x:Bind ViewModel.IsWatcherStopped, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE768;" Margin="0,0,8,0" Foreground="DarkGreen" Opacity="{x:Bind ViewModel.WatcherButtonEnable_GlyphOpacity, Mode=OneWay}" />
                    <TextBlock Text="Enable"/>
                </StackPanel>
            </Button>

            <Button x:Name="buttonStopWatch" Click="ButtonStopWatch_Click" Margin="10,0,0,0" Background="{ThemeResource ButtonBackground_Red}"
                    IsEnabled="{x:Bind ViewModel.IsWatcherRunning, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE71A;" Margin="0,0,8,0" Foreground="DarkRed" Opacity="{x:Bind ViewModel.WatcherButtonDisable_GlyphOpacity, Mode=OneWay}" />
                    <TextBlock Text="Disable"/>
                </StackPanel>
            </Button>

            <!-- Vertical Divider 
            <Rectangle Width="1" Height="30" Fill="Gray" Margin="20,0,20,0"/>
            -->

            <!-- Button to open lighting settings -->
            <Button x:Name="buttonOpenLightingSettings" Click="OpenLightingSettings_Click" Margin="10,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE82F;" Margin="0,0,8,0"/>
                    <TextBlock Text="Lighting Menu"/>
                </StackPanel>
            </Button>

        </StackPanel>

        <!-- Row with Dropdown with selectable devices and Apply Button -->
        <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,20,0,0" HorizontalAlignment="Center">

            <!-- Dropdown -->
            <ComboBox x:Name="dropdownDevices"
              Width="300"
              HorizontalAlignment="Center"
              PlaceholderText="Select a device"
              ItemsSource="{x:Bind ViewModel.AvailableDevices, Mode=OneWay}"
              IsEnabled="{x:Bind ViewModel.IsWatcherRunning, Mode=OneWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image
                               Width="16" 
                               Height="16" 
                               Margin="0,0,8,0"
                               Source="{Binding Properties, Converter={StaticResource DllPathToImageConverter}}" />
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <!-- Apply Button -->
            <Button x:Name="buttonApply" Click="ButtonApply_Click" Margin="10,0,0,0"
                    HorizontalAlignment="Center"
                    ignore:Visibility="{x:Bind ViewModel.WatcherRunningVisibilityBool, Mode=OneWay}"
                    IsEnabled="{x:Bind ViewModel.ShouldApplyButtonBeEnabled, Mode=OneWay}">  
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8FB;" Margin="0,0,8,0"/>
                    <TextBlock Text="Apply To Device"/>
                </StackPanel>
            </Button>

        </StackPanel>

        <!-- Mixed Use status message: When attached, says number of attached devices, otherwise watcher status such as 'Waiting' with instructional message to start -->
        <TextBlock x:Name="statusText" 
                   Grid.Row="3" 
                   Margin="0,10,0,0"
                   HorizontalAlignment="Center"
                   Foreground="{x:Bind ViewModel.DeviceStatusMessage.MsgColor, Mode=OneWay}">
            <Run Text="{x:Bind ViewModel.DeviceStatusMessage.MsgPrefix, Mode=OneWay}" FontWeight="{x:Bind ViewModel.DeviceStatusMessage.PrefixWeight, Mode=OneWay}"/>
            <Run Text="{x:Bind ViewModel.DeviceStatusMessage.MsgBody, Mode=OneWay}"/>
        </TextBlock>

        <TextBlock x:Name="attachedDevices"
                   Grid.Row="4"
                   Margin="0,5,0,0"
                   Text="{x:Bind ViewModel.AttachedDevicesMessage, Mode=OneWay}"
                   HorizontalAlignment="Center"
                   ignore:Visibility="{x:Bind ViewModel.WatcherRunningVisibilityBool, Mode=OneWay}"
                   />

        <!-- Color Settings Grid -->
        <Grid x:Name="ColorButtonGrid" Grid.Row="5" Margin="0,20,0,0" HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>    <!-- Key Label -->
                <ColumnDefinition Width="50"/>      <!-- On Column -->
                <ColumnDefinition Width="0"/>       <!-- ??? -->
                <ColumnDefinition Width="40"/>      <!-- Swap Column -->
                <ColumnDefinition Width="50"/>      <!-- Off Column -->
            </Grid.ColumnDefinitions>

            <!-- Headers -->
            <TextBlock Grid.Row="0" Grid.Column="0" Text="Key" FontWeight="Bold" Margin="0,0,10,5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock Grid.Row="0" Grid.Column="1" Text="On" FontWeight="Bold" Margin="5,0,5,5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock Grid.Row="0" Grid.Column="4" Text="Off" FontWeight="Bold" Margin="5,0,5,5" HorizontalAlignment="Center" VerticalAlignment="Center"/>

            <!-- Scroll Lock -->
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Scroll Lock:" VerticalAlignment="Center" Margin="0,5,10,5"/>
            <Button x:Name="buttonScrollLockOn"
                Grid.Row="1"
                Grid.Column="1"
                Style="{StaticResource ColorButtonStyle}"
                Background="{x:Bind ViewModel.ScrollLockState.OnBrush, Mode=OneWay}"
                Click="ColorButton_Click"
                BorderBrush="{ThemeResource ButtonBorder}"
                local:ButtonParameters.ColorState="On"
                local:ButtonParameters.KeyName="ScrollLock"
                BorderThickness="{x:Bind ViewModel.ScrollLockState.OnBorderThickness, Mode=OneWay}"
            >
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind ViewModel.ScrollLockState.OnGlyph, Mode=OneWay}" />
            </Button>
            <Button x:Name="buttonSwapScrollLock"
                Grid.Row="1"
                Grid.Column="3"
                Style="{StaticResource SwapButtonStyle}"
                Click="SwapOnOffColor_Click"
                Tag="ScrollLock" HorizontalAlignment="Center"
            >
                <FontIcon Style="{StaticResource SwapIconGlyphStyle}" />
            </Button>
            <Button x:Name="buttonScrollLockOff"
                Grid.Row="1"
                Grid.Column="4"
                Style="{StaticResource ColorButtonStyle}"
                Background="{x:Bind ViewModel.ScrollLockState.OffBrush, Mode=OneWay}"
                Click="ColorButton_Click"
                BorderBrush="{ThemeResource ButtonBorder}"
                local:ButtonParameters.ColorState="Off"
                local:ButtonParameters.KeyName="ScrollLock"
                BorderThickness="{x:Bind ViewModel.ScrollLockState.OffBorderThickness, Mode=OneWay}"
            >
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind ViewModel.ScrollLockState.OffGlyph, Mode=OneWay}" />
            </Button>

            <!-- Caps Lock -->
            <TextBlock Grid.Row="2" Grid.Column="0" Text="Caps Lock:" VerticalAlignment="Center" Margin="0,5,10,5"/>
            <Button x:Name="buttonCapsLockOn"
                Grid.Row="2"
                Grid.Column="1"
                Style="{StaticResource ColorButtonStyle}"
                Background="{x:Bind ViewModel.CapsLockState.OnBrush, Mode=OneWay}"
                Click="ColorButton_Click"
                BorderBrush="{ThemeResource ButtonBorder}"
                local:ButtonParameters.ColorState="On"
                local:ButtonParameters.KeyName="CapsLock"
                BorderThickness="{x:Bind ViewModel.CapsLockState.OnBorderThickness, Mode=OneWay}"
            >
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind ViewModel.CapsLockState.OnGlyph, Mode=OneWay}" />
            </Button>
            <Button x:Name="buttonSwapCapsLock"
                Grid.Row="2"
                Grid.Column="3"
                Style="{StaticResource SwapButtonStyle}"
                Click="SwapOnOffColor_Click"
                Tag="CapsLock" >
                <FontIcon Style="{StaticResource SwapIconGlyphStyle}" />
            </Button>
            <Button x:Name="buttonCapsLockOff"
                Grid.Row="2"
                Grid.Column="4"
                Style="{StaticResource ColorButtonStyle}"
                Background="{x:Bind ViewModel.CapsLockState.OffBrush, Mode=OneWay}"
                Click="ColorButton_Click"
                BorderBrush="{ThemeResource ButtonBorder}"
                local:ButtonParameters.ColorState="Off"
                local:ButtonParameters.KeyName="CapsLock"
                BorderThickness="{x:Bind ViewModel.CapsLockState.OffBorderThickness, Mode=OneWay}"
            >
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind ViewModel.CapsLockState.OffGlyph, Mode=OneWay}" />
            </Button>

            <!-- Num Lock -->
            <TextBlock Grid.Row="3" Grid.Column="0" Text="Num Lock:" VerticalAlignment="Center" Margin="0,5,10,5"/>
            <Button x:Name="buttonNumLockOn"
                Grid.Row="3"
                Grid.Column="1"
                Style="{StaticResource ColorButtonStyle}"
                Background="{x:Bind ViewModel.NumLockState.OnBrush, Mode=OneWay}"
                Click="ColorButton_Click"
                BorderBrush="{ThemeResource ButtonBorder}"
                local:ButtonParameters.ColorState="On"
                local:ButtonParameters.KeyName="NumLock"
                BorderThickness="{x:Bind ViewModel.NumLockState.OnBorderThickness, Mode=OneWay}"
            >
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind ViewModel.NumLockState.OnGlyph, Mode=OneWay}" />
            </Button>
            <Button x:Name="buttonSwapNumLock"
                Grid.Row="3"
                Grid.Column="3"
                Style="{StaticResource SwapButtonStyle}"
                Click="SwapOnOffColor_Click"
                Tag="NumLock">
                <FontIcon Style="{StaticResource SwapIconGlyphStyle}" />
            </Button>
            <Button x:Name="buttonNumLockOff"
                Grid.Row="3"
                Grid.Column="4"
                Style="{StaticResource ColorButtonStyle}"
                Background="{x:Bind ViewModel.NumLockState.OffBrush, Mode=OneWay}"
                Click="ColorButton_Click"
                BorderBrush="{ThemeResource ButtonBorder}"
                local:ButtonParameters.ColorState="Off"
                local:ButtonParameters.KeyName="NumLock"
                BorderThickness="{x:Bind ViewModel.NumLockState.OffBorderThickness, Mode=OneWay}"
                >
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind ViewModel.NumLockState.OffGlyph, Mode=OneWay}" />
            </Button>

            <!-- Default -->
            <TextBlock Grid.Row="4" Grid.Column="0" Text="Default:" VerticalAlignment="Center" Margin="0,5,10,5"/>
            <Button x:Name="buttonDefaultColor"
                Grid.Row="4"
                Grid.Column="1"
                Style="{StaticResource ColorButtonStyle}"
                Background="{x:Bind ViewModel.DefaultColorBrush, Mode=OneWay}"
                Click="ColorButton_Click"
                Tag="DefaultColor"
            />
            <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding DefaultColorHex}" Margin="5,2"/>
        </Grid>

        <!-- Brightness Slider -->
        <StackPanel Grid.Row="6" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,5,0,0">
            <TextBlock x:Name="labelGlobalBrightness"  Text="Global Brightness:" VerticalAlignment="Center" Margin="0,0,0,0"/>
            <Slider x:Name="sliderBrightness" 
                Width="200" 
                Minimum="0" 
                Maximum="100"
                Margin="10,5,0,0"
                Value="{x:Bind ViewModel.Brightness, Mode=TwoWay}"
                ValueChanged="OnBrightnessSliderChanged"
                />
        </StackPanel>

        <!-- Config Buttons -->
        <StackPanel Orientation="Horizontal" Grid.Row="7" HorizontalAlignment="Center" Margin="0,20,0,0">
            
            <!-- Save Button -->
            <Button x:Name="buttonSaveSettings" Click="ButtonSaveSettings_Click" Margin="0,0,0,0" IsEnabled="{x:Bind ViewModel.IsSaveButtonEnabled, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE74E;" Margin="0,0,8,0"/>
                    <TextBlock Text="Save Color Settings"/>
                </StackPanel>
            </Button>

            <!-- Undo Changes -->
            <Button x:Name="undoChangesButton" Click="UndoChanges_Click" Margin="10,0,0,0" IsEnabled="{x:Bind ViewModel.IsSaveButtonEnabled, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xECC5;" Margin="0,0,8,0"/>
                    <TextBlock Text="Undo Changes"/>
                </StackPanel>
            </Button>

            <!-- Restore Defaults Button -->
            <Button x:Name="buttonRestoreDefaults" Click="RestoreDefaults_Click" Margin="10,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7A7;" Margin="0,0,8,0"/>
                    <TextBlock Text="Restore Default Colors"/>
                </StackPanel>
            </Button>
            
            <!-- Open Config Folder (Debug Mode) -->
            <Button x:Name="buttonOpenConfigFolder" 
                    Click="OpenConfigFolder_Click"
                    Margin="10,0,10,0"
                    Visibility="{x:Bind ViewModel.AdvancedInfo_VisibilityBool, Mode=OneWay}"
                    >
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8B7;" Margin="0,0,8,0"/>
                    <TextBlock Text="Open Config Folder"/>
                </StackPanel>
            </Button>

        </StackPanel>

        <!-- Startup Setting Toggle and Message -->
        <Grid Grid.Row="8" Margin="0,20,0,0" HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Start with Windows Label and Toggle -->
            <TextBlock Grid.Row="0" Grid.Column="0" 
               Text="Start with Windows" 
               HorizontalAlignment="Center"
               Margin="0,0,0,0"/>
            <ToggleSwitch x:Name="toggleStartupWithWindows"
                  Grid.Row="1" Grid.Column="0"
                  IsOn="{x:Bind ViewModel.IsStartupEnabled, Mode=TwoWay}"
                  IsEnabled="{x:Bind ViewModel.StartupSettingCanBeChanged, Mode=OneWay}"
                  HorizontalAlignment="Center"
                  MinWidth="0" 
                  Margin="0,0,0,0"/>

            <!-- Start Minimized to Tray Label and Toggle -->
            <TextBlock Grid.Row="0" Grid.Column="1" 
               Text="Start Minimized to Tray" 
               HorizontalAlignment="Center"
               Margin="30,0,0,0"/>
            <ToggleSwitch x:Name="toggleStartMinimizedToTray"
                  Grid.Row="1" Grid.Column="1"
                  IsOn="{x:Bind ViewModel.StartMinimizedToTray, Mode=TwoWay}"
                  HorizontalAlignment="Center"
                  MinWidth="0" 
                  Margin="30,0,0,0"/>

            <!-- Advanced Info Mode Toggle -->
            <TextBlock Grid.Row="0" Grid.Column="2" 
               Text="Advanced Info" 
               HorizontalAlignment="Center"
               Margin="30,0,0,0"
            />
            <ToggleSwitch x:Name="AdvancedInfoToggle" 
                Grid.Row="1" Grid.Column="2"
                IsOn="{x:Bind ViewModel.ShowAdvancedInfo, Mode=TwoWay}"
                Toggled="AutoSizeWindow_OnAdvancedToggle"
                HorizontalAlignment="Center"
                MinWidth="0" 
                Margin="30,0,0,0"
            />

            <!-- Debug logging toggle -->
            <TextBlock Grid.Row="0" Grid.Column="3" 
               Text="Debug Logging" 
               HorizontalAlignment="Center"
               Margin="30,0,0,0"
               ToolTipService.ToolTip="Creates debug log on the desktop."
            />
            <ToggleSwitch x:Name="toggleDebugLogging"
                  Grid.Row="1" Grid.Column="3"
                  IsOn="{x:Bind ViewModel.DebugFileLoggingEnabled, Mode=TwoWay}"
                  HorizontalAlignment="Center"
                  MinWidth="0" 
                  Margin="30,0,0,0"
                  ToolTipService.ToolTip="Creates debug log on the desktop."
                  Toggled="ToggleDebugLogging_Toggled"
            />

        </Grid>

        <!-- Divider Line and Informational TextBlock -->
        <Line Grid.Row="9" 
              X2="1000" 
              Stroke="Black" 
              StrokeThickness="1" 
              HorizontalAlignment="Center"
              Margin="0,10,0,0"
            />
        
        <Expander Grid.Row="10"
          Header="{x:Bind ViewModel.InstructionHeader, Mode=OneWay}"
          IsExpanded="False"
                  Width="700"
          Margin="0,20,0,0"
          HorizontalAlignment="Center"
          SizeChanged="Expander_SizeChange"
          >
            <TextBlock TextWrapping="Wrap">
                <Run Text="IMPORTANT" FontWeight="Bold" Foreground="{x:Bind DefaultFontColor}"/>
                <Run Text=": Follow these steps to set up Dynamic Lighting:"/>
                <LineBreak/>
                <Run Text="      1. Click this to open: "/>
                <Hyperlink NavigateUri="ms-settings:personalization-lighting" Click="OpenLightingSettings_Click">
                    Settings > Personalization > Dynamic Lighting
                </Hyperlink>
                    <LineBreak/>
                <Run Text="      2. Enable the toggle that says &quot;Use dynamic lighting on my devices&quot;"/>
                    <LineBreak/>
                <Run Text="      3. Find and click on your keyboard device in the row of devices at the top, to open its specific settings"/>
                    <LineBreak/>
                <Run Text="      4. Enable the toggle that says &quot;Use Dynamic Lighting on this device&quot;"/>
                    <LineBreak/>
                <Run Text="      5. Under 'Background Light Control', drag 'Dynamic Lighting Key Indicator' to the top of the list"/>
                    <LineBreak/>
                    <LineBreak/>
                <Run Text="📝 Note: Be sure to change the 'Background Lighting Control' setting only within the sub-menu for your device."/>
                    <LineBreak/>
                <Run Text="The setting in the top level 'Dynamic Lighting' menu is the global setting that will affect all devices."/>
            </TextBlock>
        </Expander>
        <!-- Debug Information Row -->
        <StackPanel x:Name="AdvancedInfoStack" Grid.Row="11" Margin="0,20,0,0" HorizontalAlignment="Center" Visibility="{x:Bind ViewModel.AdvancedInfo_VisibilityBool, Mode=OneWay}">
            <TextBlock Margin="0,5,0,0" >
                <Run Text="Name: "/>
                <Run Text="{x:Bind ViewModel.AttachedDeviceName, Mode=OneWay}"/>
                    </TextBlock>
            <TextBlock Margin="0,5,0,0" >
                <Run Text="Is Available: "/>
                <Run Text="{x:Bind ViewModel.DeviceIsAvailable, Mode=OneWay}"/>
                    </TextBlock>
            <TextBlock Margin="0,5,0,0" >
                <Run Text="Is Connected: "/>
                <Run Text="{x:Bind ViewModel.DeviceIsConnected, Mode=OneWay}"/>
                    </TextBlock>
            <TextBlock Margin="0,5,0,0" >
                <Run Text="Is Enabled: "/>
                <Run Text="{x:Bind ViewModel.DeviceIsEnabled, Mode=OneWay}"/>
            </TextBlock>
        </StackPanel>

    </Grid>

</Window>